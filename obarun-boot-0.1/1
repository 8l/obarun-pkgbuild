#!/bin/sh
# vim: set ts=4 sw=4 et:

PATH=/usr/bin:/usr/sbin

. /etc/runit/functions

msg "Welcome to Obarun!"

[ -r /etc/rc.conf ] && . /etc/rc.conf

# Let's go

msg "Mounting pseudo-filesystems and load CGroups..."
mountpoint -q /proc || mount -o nosuid,noexec,nodev -t proc proc /proc
mountpoint -q /sys || mount -o nosuid,noexec,nodev -t sysfs sys /sys
mountpoint -q /run || mount -o mode=0755,nosuid,nodev -t tmpfs run /run
mountpoint -q /dev || mount -o mode=0755,nosuid -t devtmpfs dev
mkdir -p -m0755 /run/runit /run/lvm /run/user /dev/pts /dev/shm
mountpoint -q /dev/pts || mount -o mode=0620,gid=5,nosuid,noexec -n -t devpts devpts /dev/pts
mountpoint -q /dev/shm || mount -o mode=1777,nosuid,nodev -n -t tmpfs shm /dev/shm

# Set the console log verbosity level using LOGLEVEL in /etc/runit.conf.
msg "Setting console log level..."
dmesg -n "${LOGLEVEL:-4}"

msg "Remounting rootfs read-only..."
mount -o remount,ro / || emergency_shell

mountpoint -q /sys/fs/cgroup || mount -o mode=0755 -t tmpfs cgroup /sys/fs/cgroup
 awk '$4 == 1 { system("mountpoint -q /sys/fs/cgroup/" $1 " || { mkdir -p /sys/fs/cgroup/" $1 " && mount -t cgroup -o " $1 " cgroup /sys/fs/cgroup/" $1 " ;}" ) }' /proc/cgroups

msg "Loaded modules kernel before udevd"

for f in $(kmod static-nodes 2>/dev/null|awk '/Module/ {print $2}'); do
	modprobe   $f 2>/dev/null
done


msg "Console setup"
TTYS=${TTYS:-12}

if [ -n "$FONT" ]; then
    msg "Setting up TTYs font to '${FONT}'..."

    _index=0
    while [ ${_index} -le $TTYS ]; do
        setfont ${FONT_MAP:+-m $FONT_MAP} ${FONT_UNIMAP:+-u $FONT_UNIMAP} \
                $FONT -C "/dev/tty${_index}"
        _index=$((_index + 1))
    done
fi

if [ -n "$KEYMAP" ]; then
    msg "Setting up keymap to '${KEYMAP}'..."
    loadkeys -q -u ${KEYMAP}
fi

if [ -n "$HARDWARECLOCK" ]; then
    msg "Setting up RTC to '${HARDWARECLOCK}'..."
    TZ=$TIMEZONE hwclock --systz \
        ${HARDWARECLOCK:+--$(echo $HARDWARECLOCK |tr A-Z a-z) --noadjfile} || emergency_shell
fi

msg "Starting udev and waiting for devices to settle..."
    udevd --daemon
    udevadm trigger --action=add --type=subsystems
    udevadm trigger --action=add --type=devices
    udevadm settle

msg "Do all for filesystem"
msg "Check dmraid"
if [ -x /usr/sbin/dmraid ]; then
   [[ $USEDMRAID = yes ]] && dmraid -i -ay && msg "Activating dmraid devices..."
fi

msg "Check btrfs"
if [ -x /usr/bin/btrfs ]; then
    [[ $USEBTRFS = yes ]] && btrfs device scan && msg "Activating btrfs devices..."
fi

msg "Check lvm"
if [ -x /usr/sbin/vgchange ]; then
   [[ $USELVM = yes ]] && vgchange  --sysinit -aay && msg "Activating LVM devices..."
fi

if [ -e /etc/crypttab ]; then
    msg "Activating encrypted devices..."
    awk -f /etc/runit/crypt.awk /etc/crypttab
    if [ -x /sbin/vgchange ]; then
        [[ $USELVM = yes ]] && vgchange --sysinit -aay && msg "Activating LVM devices for dm-crypt..."
    fi
fi

msg "Fastboot or not"

[ -f /fastboot ] && FASTBOOT=1
[ -f /forcefsck ] && FORCEFSCK="-f"
for arg in $(cat /proc/cmdline); do
    case $arg in
        fastboot) FASTBOOT=1;;
        forcefsck) FORCEFSCK="-f";;
    esac
done

if [ -z "$FASTBOOT" ]; then
    msg "Checking filesystems:"
    fsck -A -T -a -t noopts=_netdev $FORCEFSCK
    if [ $? -gt 1 ]; then
        emergency_shell
    fi
fi

msg "Mounting rootfs read-write..."
mount -o remount,rw / || emergency_shell

msg "Mounting all non-network filesystems..."
mount -a -t "nosysfs,nonfs,nonfs4,nosmbfs,nocifs" -O no_netdev || emergency_shell

msg "Looking for swap"
[[ $USESWAP = yes ]] && swapon -a && msg "Activing swap"

msg "Initializing random seed..."
cp /var/lib/random-seed /dev/urandom >/dev/null 2>&1 || true
( umask 077; bytes=$(cat /proc/sys/kernel/random/poolsize) || bytes=512; dd if=/dev/urandom of=/var/lib/random-seed count=1 bs=$bytes >/dev/null 2>&1 )

msg "Setting up loopback interface..."
ip link set up dev lo

msg "Check Hostname, Timezone in rc.conf and configure it"
[ -r /etc/hostname ] && read -r HOSTNAME < /etc/hostname
if [ -n "$HOSTNAME" ]; then
   echo "$HOSTNAME" > /proc/sys/kernel/hostname
else
    msg_warn "Didn't setup a hostname!"
fi

if [ -n "$TIMEZONE" ]; then
    msg "Setting up timezone to '${TIMEZONE}'..."
    ln -sf "/usr/share/zoneinfo/$TIMEZONE" /etc/localtime
fi

msg "Check extra modules in rc.conf and load it"
if [ -n "$MODULES" ]; then
    msg "Loading kernel modules: ${MODULES} ..."
    modprobe -ab ${MODULES}
fi

msg "Let's set the kernel runtime parameters if any exist"
if [ -f "/etc/sysctl.conf" ]; then
    msg "Setting kernel runtime parameters..."
    sysctl -p -q
fi

msg "clean install"
install -m0664 -o root -g utmp /dev/null /run/utmp
if [ ! -e /var/log/wtmp ]; then
	install -m0664 -o root -g utmp /dev/null /var/log/wtmp
fi
if [ ! -e /var/log/btmp ]; then
	install -m0600 -o root -g utmp /dev/null /var/log/btmp
fi
install -dm1777 /tmp/.X11-unix /tmp/.ICE-unix
rm -f /etc/nologin /forcefsck /forcequotacheck /fastboot

#Copy the log of dmesg
dmesg >/var/log/dmesg.log
if [ $(sysctl -n kernel.dmesg_restrict 2>/dev/null) -eq 1 ]; then
	chmod 0600 /var/log/dmesg.log
else
	chmod 0644 /var/log/dmesg.log
fi

mkdir -p /run/runit
[ ! -d /run/lock ] && mkdir /run/lock
install -m100 /dev/null /run/runit/stopit

msg "Initialization complete, running stage 2..."
